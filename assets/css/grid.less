@import (reference) "variables";

.container {
  margin: 0 auto;
  max-width: 1280px;
  width: 90%;
}
@media @medium-and-up {
  .container {
    width: 85%;
  }
}
@media @large-and-up {
  .container {
    width: 70%;
  }
}
.container .row {
  margin-left: -1 * @gutter-width / 2;
  margin-right: -1 * @gutter-width / 2;
}

.section {
  padding-top: 1rem;
  padding-bottom: 1rem;

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}


// Mixins to eliminate code repitition
.reset-offset {
  margin-left: auto;
  left: auto;
  right: auto;
}
.grid-classes(@size, @i, @perc) {
  &.offset-@{size}@{i} {
    margin-left: @perc;
  }
  &.pull-@{size}@{i} {
	right: @perc;
  }
  &.push-@{size}@{i} {
	left: @perc;
  }
}


.row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  .col {
    float: left;
    box-sizing: border-box;
    padding: 0 @gutter-width / 2;
    min-height: 1px;

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

	.iterateCols(@colIterator:1) when(@colIterator <= @num-cols) {
	  @percValue: 100 / (@num-cols / @colIterator);
	  @perc: ~"@{percValue}%";

	  &.s@{colIterator} {
		width: @perc;
		.reset-offset;
	  }

	  .grid-classes(s, @colIterator, @perc);

	  .iterateCols((@colIterator + 1));
	}
	.iterateCols();

	.iterateColsMedium(@colIterator:1) when(@colIterator <= @num-cols) {
	  @percValue: 100 / (@num-cols / @colIterator);
	  @perc: ~"@{percValue}%";

	  @media @medium-and-up {

		&.m@{colIterator} {
		  width: @perc;
		  .reset-offset;
		}

		.grid-classes(m, @colIterator, @perc);

	  }
	  .iterateColsMedium((@colIterator + 1));
	}
	.iterateColsMedium();

	.iterateColsLarge(@colIterator:1) when(@colIterator <= @num-cols) {
	  @percValue: 100 / (@num-cols / @colIterator);
	  @perc: ~"@{percValue}%";

	  @media @large-and-up {

		&.l@{colIterator} {
		  width: @perc;
		  @include reset-offset;
		}

	  	@include grid-classes(l, @colIterator, @perc);

	  }
	  .iterateColsLarge((@colIterator + 1));
	}
	.iterateColsLarge();

	.iterateColsXL(@colIterator:1) when(@colIterator <= @num-cols) {
	  @percValue: 100 / (@num-cols / @colIterator);
	  @perc: ~"@{percValue}%";

	  @media @extra-large-and-up {

		&.xl@{colIterator} {
		  width: @perc;
		  .reset-offset;
		}

		.grid-classes(xl, @colIterator, @perc);

	  }

	  .iterateColsXL((@colIterator + 1));
	}
	.iterateColsXL();

  }
}
